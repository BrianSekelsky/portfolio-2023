---
import CardLabel from "./Card-label.astro";

interface Props {
  size: string;
  href: string;
  title: string;
  types: { text: string; special: boolean; }[]
  year: string;
}

const { size, href = "#", title, types, year } = Astro.props;
---

<div
  class={size === "small" ? "bg-white group w-full hover:cursor-pointer col-span-2 sm:col-span-1" : "bg-white group w-full hover:cursor-pointer col-span-2 sm:row-span-2"}
>
  <div class="relative overflow-hidden min-h-full w-full flex items-center">
    <a href={href} class="min-h-full">
    <div class="p-1 m-auto group-hover:p-4 group-focus:p-4 group-active:p-4 transition-all duration-200">
      <slot class="transition-all duration-200" />
    </div>
    <div class="bg-white absolute bottom-0 w-full border-t translate-y-40 group-hover:translate-y-0 group-focus:translate-y-0 group-active:translate-y-0 opacity-0 group-hover:opacity-100 group-focus:opacity-100 group-active:opacity-100 group-hover:scale-100 group-focus:scale-100 group-active:scale-100 transition-all duration-200 px-4 py-4">
      <div class="items-baseline pb-6">
        <CardLabel value={title} , isLarge={true} />
        <CardLabel value={year} , isLarge={false} />
      </div>
      <div class="">
        <div class="flex flex-wrap gap-2">
          {
            types.map((type) => (
            <div class={type.special ? "border rounded-full px-3 py-1 text-xs bg-blue border-blue text-white" : "border rounded-full px-3 py-1 text-xs"}>
              <CardLabel value={type.text} , isLarge={false} />
            </div>
            ))
          }
        </div>
      </div>
    </div>
    </a>
  </div>
</div>

<style>


</style>
